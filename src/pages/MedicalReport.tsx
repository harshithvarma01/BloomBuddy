import React from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Header } from '@/components/Header';
import { Footer } from '@/components/Footer';
import { ArrowLeft, Download, Share, FileText, AlertTriangle, CheckCircle2, Clock, User, MessageCircle, Shield, Sparkles, TrendingUp, Activity, Zap, Eye, BarChart3, Calendar, Award } from 'lucide-react';

interface MedicalReportData {
  fileName: string;
  uploadDate: string;
  analysis: string;
  fileType: string;
  fileSize: string;
  documentType?: 'pdf' | 'image' | 'unknown';
  confidence?: number;
  extractedText?: string;
}

export default function MedicalReport() {
  const location = useLocation();
  const navigate = useNavigate();
  const reportData = location.state as MedicalReportData;

  // If no report data, redirect to home
  if (!reportData) {
    navigate('/');
    return null;
  }

  const handleDownloadReport = () => {
    // Generate PDF or text file with the analysis
    const content = `
BloomBuddy Medical Report Analysis
================================

File: ${reportData.fileName}
Date: ${reportData.uploadDate}
Type: ${reportData.fileType}
Size: ${reportData.fileSize}

Analysis:
${reportData.analysis}

---
Generated by BloomBuddy AI Health Companion
This analysis is for informational purposes only and should not replace professional medical advice.
    `.trim();

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `medical-report-analysis-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handleShareReport = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: 'Medical Report Analysis - BloomBuddy',
          text: 'Check out my medical report analysis from BloomBuddy AI',
          url: window.location.href,
        });
      } catch (error) {
        console.log('Error sharing:', error);
      }
    } else {
      // Fallback to copying link
      navigator.clipboard.writeText(window.location.href);
      // You could show a toast here
    }
  };

  const handleChatAboutReport = () => {
    // Navigate to chat page with the analysis data
    navigate('/chat', {
      state: {
        initialAnalysis: reportData.analysis,
        fromReport: true
      }
    });
  };

  const formatAnalysis = (text: string) => {
    // Split by lines and format with enhanced styling - optimized for readability and space efficiency
    return text.split('\n').map((line, index) => {
      if (line.trim() === '') return <br key={index} />;
      
      if (line.startsWith('✓')) {
        return (
          <div key={index} className="flex items-start gap-2 mb-2 p-2 bg-green-50 dark:bg-green-950/20 rounded border-l-2 border-green-500">
            <CheckCircle2 className="w-4 h-4 text-green-600 mt-0.5 flex-shrink-0" />
            <span className="text-green-800 dark:text-green-200 font-medium text-sm">{line.substring(2)}</span>
          </div>
        );
      }
      
      if (line.startsWith('⚠️')) {
        return (
          <div key={index} className="flex items-start gap-2 mb-2 p-2 bg-amber-50 dark:bg-amber-950/20 rounded border-l-2 border-amber-500">
            <AlertTriangle className="w-4 h-4 text-amber-600 mt-0.5 flex-shrink-0" />
            <span className="text-amber-800 dark:text-amber-200 font-medium text-sm">{line.substring(2)}</span>
          </div>
        );
      }
      
      if (line.startsWith('•')) {
        return (
          <div key={index} className="ml-4 mb-1.5 flex items-start gap-2">
            <div className="w-1 h-1 bg-primary rounded-full mt-2 flex-shrink-0"></div>
            <span className="text-muted-foreground text-sm leading-relaxed">{line.substring(2)}</span>
          </div>
        );
      }
      
      if (line.includes(':') && line.length < 50 && !line.startsWith(' ')) {
        return (
          <h4 key={index} className="font-bold text-foreground mt-4 mb-2 text-base flex items-center gap-2">
            <div className="w-1.5 h-4 bg-gradient-to-b from-primary to-accent rounded-full"></div>
            {line}
          </h4>
        );
      }
      
      return (
        <p key={index} className="text-foreground mb-2 leading-relaxed text-sm">
          {line}
        </p>
      );
    });
  };

  return (
    <div className="min-h-screen bg-gradient-main relative overflow-hidden">
      {/* Enhanced Background decoration with animated elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-primary/5 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-accent/5 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-secondary/3 rounded-full blur-3xl animate-pulse delay-500"></div>
        
        {/* Medical grid pattern */}
        <div className="absolute inset-0 opacity-5" style={{
          backgroundImage: `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23000000' fill-opacity='0.1'%3E%3Ccircle cx='7' cy='7' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
        }}></div>
      </div>
      
      <Header />
      
      <main className="pt-20 pb-8 relative z-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* Compact Header Section */}
          <div className="mb-6">
            {/* Breadcrumb */}
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-2 text-sm text-muted-foreground">
                <span>Home</span>
                <span>/</span>
                <span>Medical Reports</span>
                <span>/</span>
                <span className="text-foreground font-medium">Analysis</span>
              </div>
              <Button
                variant="ghost"
                onClick={() => navigate('/')}
                className="text-muted-foreground hover:text-foreground hover:bg-white/10 backdrop-blur-sm transition-all duration-200 border border-white/10"
                size="sm"
              >
                <ArrowLeft className="w-4 h-4 mr-2" />
                Back to Home
              </Button>
            </div>
            
            {/* Compact Hero Section */}
            <div className="flex flex-col lg:flex-row lg:items-center justify-between mb-6 gap-4">
              <div className="flex items-center gap-4">
                <div className="w-12 h-12 rounded-full bg-gradient-to-br from-primary to-accent flex items-center justify-center">
                  <Activity className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h1 className="text-2xl font-bold bg-gradient-to-r from-primary via-accent to-primary bg-clip-text text-transparent">
                    Medical Report Analysis
                  </h1>
                  <div className="flex items-center gap-2 mt-1">
                    <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                    <span className="text-sm text-green-700 dark:text-green-300 font-medium">Analysis Complete</span>
                  </div>
                </div>
              </div>
              
              {/* Compact Action Buttons */}
              <div className="flex gap-2 flex-wrap">
                <Button
                  onClick={handleChatAboutReport}
                  className="flex items-center gap-2 bg-gradient-to-r from-primary to-primary/80 hover:from-primary/90 hover:to-primary/70"
                  size="sm"
                >
                  <MessageCircle className="w-4 h-4" />
                  Chat
                </Button>
                <Button
                  variant="outline"
                  onClick={handleShareReport}
                  className="flex items-center gap-2"
                  size="sm"
                >
                  <Share className="w-4 h-4" />
                  Share
                </Button>
                <Button
                  variant="outline"
                  onClick={handleDownloadReport}
                  className="flex items-center gap-2"
                  size="sm"
                >
                  <Download className="w-4 h-4" />
                  Download
                </Button>
              </div>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-12 gap-6">
            {/* Adaptive Left Sidebar - Report Information */}
            <div className="lg:col-span-3 xl:col-span-3 space-y-4">
              {/* Compact Document Info */}
              <Card className="p-4 bg-gradient-card backdrop-blur-sm border-0 shadow-lg">
                <h3 className="font-bold text-foreground mb-3 flex items-center gap-2 text-sm">
                  <FileText className="w-4 h-4 text-primary" />
                  Document Information
                </h3>
                
                <div className="space-y-3 text-sm">
                  <div className="flex flex-col gap-1">
                    <span className="text-muted-foreground font-medium">File:</span>
                    <span className="text-foreground break-all text-xs">{reportData.fileName}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-muted-foreground font-medium">Date:</span>
                    <span className="text-foreground text-xs">{reportData.uploadDate}</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-muted-foreground font-medium">Type:</span>
                    <div className="flex items-center gap-2">
                      <span className="text-foreground font-mono text-xs bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded">{reportData.fileType}</span>
                      {reportData.documentType && (
                        <span className={`text-xs px-2 py-1 rounded ${
                          reportData.documentType === 'pdf' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' :
                          reportData.documentType === 'image' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200' :
                          'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'
                        }`}>
                          {reportData.documentType.toUpperCase()}
                        </span>
                      )}
                    </div>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-muted-foreground font-medium">Size:</span>
                    <span className="text-foreground text-xs">{reportData.fileSize}</span>
                  </div>
                  <div className="flex justify-between items-center pt-2 border-t border-border/20">
                    <span className="text-muted-foreground font-medium">AI:</span>
                    <div className="flex items-center gap-2">
                      <div className="w-4 h-4 rounded-full bg-gradient-to-br from-primary to-accent flex items-center justify-center">
                        <Sparkles className="w-2.5 h-2.5 text-white" />
                      </div>
                      <span className="text-foreground font-medium text-xs">BloomBuddy AI</span>
                    </div>
                  </div>
                  {reportData.confidence && (
                    <div className="flex justify-between items-center pt-2">
                      <span className="text-muted-foreground font-medium">Confidence:</span>
                      <div className="flex items-center gap-2">
                        <div className={`w-2 h-2 rounded-full ${
                          reportData.confidence > 0.7 ? 'bg-green-500' : 
                          reportData.confidence > 0.5 ? 'bg-yellow-500' : 'bg-red-500'
                        }`}></div>
                        <span className="text-foreground text-xs">{Math.round(reportData.confidence * 100)}%</span>
                      </div>
                    </div>
                  )}
                </div>
              </Card>
              
              {/* Compact Status Card */}
              <Card className="p-4 bg-gradient-card backdrop-blur-sm border-0 shadow-lg">
                <h3 className="font-bold text-foreground mb-3 flex items-center gap-2 text-sm">
                  <Activity className="w-4 h-4 text-primary" />
                  Analysis Status
                </h3>
                
                <div className="space-y-2">
                  <div className="flex items-center gap-2 text-xs p-2 bg-green-50 dark:bg-green-950/20 rounded">
                    <CheckCircle2 className="w-3 h-3 text-green-600" />
                    <span className="text-green-800 dark:text-green-200 font-medium">Complete & Ready</span>
                  </div>
                  <div className="flex items-center gap-2 text-xs p-2 bg-blue-50 dark:bg-blue-950/20 rounded">
                    <BarChart3 className="w-3 h-3 text-blue-600" />
                    <span className="text-blue-800 dark:text-blue-200">Insights Generated</span>
                  </div>
                  <div className="flex items-center gap-2 text-xs p-2 bg-purple-50 dark:bg-purple-950/20 rounded">
                    <MessageCircle className="w-3 h-3 text-purple-600" />
                    <span className="text-purple-800 dark:text-purple-200">Ready for Chat</span>
                  </div>
                </div>
              </Card>

              {/* Compact Disclaimer */}
              <Card className="p-4 bg-gradient-to-br from-amber-500/10 to-orange-500/5 backdrop-blur-sm border-amber-200/20 shadow-lg">
                <div className="flex items-start gap-3">
                  <Shield className="w-4 h-4 text-amber-600 flex-shrink-0 mt-0.5" />
                  <div>
                    <h4 className="font-bold text-amber-800 dark:text-amber-200 mb-2 text-xs">Medical Disclaimer</h4>
                    <p className="text-xs text-amber-700 dark:text-amber-300 leading-relaxed">
                      AI analysis for informational purposes only. Consult healthcare providers for medical advice.
                    </p>
                  </div>
                </div>
              </Card>
            </div>

            {/* Main Content - Adaptive Analysis Results */}
            <div className="lg:col-span-9 xl:col-span-9">
              <Card className="p-6 bg-gradient-card backdrop-blur-sm border-0 shadow-lg h-fit">
                <div className="flex items-center justify-between mb-6">
                  <div className="flex items-center gap-3">
                    <div className="w-8 h-8 rounded-full bg-gradient-to-br from-primary to-accent flex items-center justify-center">
                      <TrendingUp className="w-4 h-4 text-white" />
                    </div>
                    <div>
                      <h3 className="text-xl font-bold text-foreground">Analysis Results</h3>
                      <p className="text-xs text-muted-foreground">AI-powered medical insights</p>
                    </div>
                  </div>
                  <div className="flex items-center gap-2 px-3 py-1 bg-green-100 dark:bg-green-900/30 rounded-full">
                    <Eye className="w-3 h-3 text-green-600" />
                    <span className="text-xs font-medium text-green-700 dark:text-green-300">Reviewed</span>
                  </div>
                </div>
                
                {/* Scrollable content area for large analysis */}
                <div className="max-h-[70vh] overflow-y-auto pr-2 space-y-1 mb-6">
                  <div className="prose prose-sm max-w-none">
                    {formatAnalysis(reportData.analysis)}
                  </div>
                </div>
                
                {/* Compact Chat CTA */}
                <div className="p-4 bg-gradient-to-r from-primary/10 via-accent/10 to-primary/5 rounded-lg border border-primary/20">
                  <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-4">
                    <div className="flex items-center gap-3">
                      <div className="w-8 h-8 rounded-full bg-gradient-to-br from-primary to-accent flex items-center justify-center">
                        <MessageCircle className="w-4 h-4 text-white" />
                      </div>
                      <div>
                        <h4 className="font-bold text-foreground text-sm">Have questions about this report?</h4>
                        <p className="text-xs text-muted-foreground">Get personalized insights and expert guidance</p>
                      </div>
                    </div>
                    <Button 
                      onClick={handleChatAboutReport}
                      className="bg-gradient-to-r from-primary to-accent hover:from-primary/90 hover:to-accent/90 flex items-center gap-2 whitespace-nowrap"
                      size="sm"
                    >
                      <MessageCircle className="w-4 h-4" />
                      Start Chat
                      <Sparkles className="w-3 h-3" />
                    </Button>
                  </div>
                </div>
                
                <div className="mt-4 pt-4 border-t border-border/20">
                  <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-2 text-xs">
                    <div className="flex items-center gap-2">
                      <Sparkles className="w-3 h-3 text-primary" />
                      <span className="text-muted-foreground">Generated by BloomBuddy AI • {reportData.uploadDate}</span>
                    </div>
                    <div className="flex items-center gap-4">
                      <div className="flex items-center gap-1">
                        <div className="w-1.5 h-1.5 bg-green-500 rounded-full"></div>
                        <span className="text-muted-foreground">Complete</span>
                      </div>
                      <div className="flex items-center gap-1">
                        <div className="w-1.5 h-1.5 bg-blue-500 rounded-full"></div>
                        <span className="text-muted-foreground">Ready</span>
                      </div>
                    </div>
                  </div>
                </div>
              </Card>
            </div>
          </div>
        </div>
      </main>
      
      <Footer />
    </div>
  );
}
